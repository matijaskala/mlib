/*
 * This file is part of MLib
 * Copyright (C) 2014  Matija Skala <mskala@gmx.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

#ifndef NON_STD_MODULE
#define NON_STD_MODULE

#include <string>

namespace non_std
{

class module
{
    void* handle{nullptr};

public:
    module ( std::string s ) { open ( s ); }

    module ( const char* s = nullptr ) { open ( s ); }

    ~module() { close(); }

    static std::string prefix();

    static std::string suffix();

    bool is_open() { return handle; }

    bool open ( const char* s ) {
        return open ( s ? static_cast<std::string> ( s ) : std::string{} );
    }

    bool open ( std::string s );

    bool close();

    template < typename _Res >
    _Res* symbol ( const char* s ) const {
        auto sym = symbol_private ( s );
        return reinterpret_cast<_Res*&> ( sym );
    }

    template < typename _Res >
    _Res* symbol ( const std::string& s ) const {
        auto sym = symbol_private ( s.c_str() );
        return reinterpret_cast<_Res*&> ( sym );
    }

    static const char* last_error();

private:
    void* symbol_private ( const char* s ) const;
};
}

#endif // NON_STD_MODULE
