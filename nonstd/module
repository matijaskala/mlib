/*
 * This file is part of MLib
 * Copyright (C) 2014  Matija Skala <mskala@gmx.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

#ifndef NON_STD_MODULE
#define NON_STD_MODULE

#include <string>
#include "abstract_function"

namespace non_std
{

class module
{
public:
    typedef void*       __handle_type;

private:
    __handle_type _M_handle;

public:
    module()
        : _M_handle() {}

    module ( const std::string& __s )
        : _M_handle() {
        open ( __s );
    }

    module ( const char* __s )
        : _M_handle() {
        open ( __s );
    }

    static std::string prefix();

    static std::string suffix();

    bool is_open() {
        return _M_handle;
    }

    bool open ( const char* __s );

    bool open ( const std::string& __s ) {
        return open ( __s.c_str() );
    }

    bool close();

    template < typename _Res >
    _Res* symbol ( const char* __s ) const {
        void* __sym = _M_symbol ( __s );
        return reinterpret_cast<_Res*&> ( __sym );
    }

    template < typename _Res >
    _Res* symbol ( const std::string& __s ) const {
        void* __sym = _M_symbol ( __s.c_str() );
        return reinterpret_cast<_Res*&> ( __sym );
    }

    static const char* last_error();

private:
    void* _M_symbol ( const char* __s ) const;
};
}

#endif // NON_STD_MODULE
