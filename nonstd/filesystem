/*
 * This file is part of MLib
 * Copyright (C) 2014  Matija Skala <mskala@gmx.com>
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 */

#ifndef NON_STD_FILESYSTEM
#define NON_STD_FILESYSTEM

#include <string>
#include <set>

namespace non_std
{

struct file
{
    enum {
        FIFO = 0x1000,
        character_device = 0x2000,
        directory = 0x4000,
        block_device = 0x6000,
        regular = 0x8000,
        symlink = 0xa000,
        socket = 0xc000,
        type = 0xf000,
    };

    const std::string name;
    const std::string path;

    mode_t mode;

    file ( const std::string& __s );

    file ( const std::pair< std::string, std::string >& __s );

    bool is_regular() const {
        return ( mode & type ) == regular;
    }

    bool is_directory() const {
        return ( mode & type ) == directory;
    }

    bool is_symlink() const {
        return ( mode & type ) == symlink;
    }

};

struct directory : public std::set< std::pair< std::string, std::string > >
{
    directory ( const std::string& __s );

    const std::string name;
};
}

#endif // NON_STD_FILESYSTEM


